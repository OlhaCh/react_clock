{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","prevProps","console","log","clockName","props","clearInterval","className","toLocaleTimeString","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","document","addEventListener","e","preventDefault","ReactDOM","render","getElementById"],"mappings":"qMASaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,SAAmBM,GAEjBC,QAAQC,IAAR,uBAA4BF,EAAUG,UAAtC,eAAsDP,KAAKQ,MAAMD,cAfrE,kCAkBE,WACEN,OAAOQ,cAAcT,KAAKD,WAnB9B,oBAsBE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAU,EAAcP,KAAKQ,MAAnBD,UAER,OACE,sBAAKG,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCH,IAEhC,YAED,sBAAMG,UAAU,cAAhB,SAA+Bb,EAAKc,8BAhC5C,GAA2BC,a,MCL3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVb,UAAWM,KAHf,EAMEhB,KAAO,IAAIC,KANb,EAQES,UAAYM,IARd,EAUEd,QAAU,EAVZ,uDAYE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEI,UAAWM,QAC1B,MACHQ,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAEC,iBACF,EAAKrB,SAAS,CAAEiB,UAAU,OAE5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEiB,UAAU,SArBhC,kCAyBE,WACEnB,OAAOQ,cAAcT,KAAKD,WA1B9B,oBA6BE,WACE,IAAQqB,EAAapB,KAAKJ,MAAlBwB,SAER,OACE,sBAAKV,UAAU,MAAf,UACE,6CAECU,GAAY,cAAC,EAAD,CAAOb,UAAWP,KAAKJ,MAAMW,mBApClD,GAAyBK,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.99f9ef88.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: Date;\n};\ntype Props = {\n  clockName: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps:Props) {\n    // eslint-disable-next-line no-console\n    console.log(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{clockName}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">{date.toLocaleTimeString()}</span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock:boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  date = new Date();\n\n  clockName = getRandomName();\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n    document.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n      this.setState({ hasClock: false });\n    });\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}